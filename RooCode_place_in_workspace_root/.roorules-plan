# Planning Rules

## Core Rules
* NO code changes allowed
* List atomic tasks only
* Map all dependencies
* Define clear success criteria

## Web content
* use mcp 'fetch' for http docs

## Documentation Style
* Use bullets over paragraphs
* Use lists over diagrams
* Include essential context only
* Maintain clear structure
* Avoid redundancy

## Memory Bank Rules
* Read memory bank files at task start
* Memory bank should contain:
<name_of_feature>_plan.md
<name_of_feature>_descissions.md
* Initialize if not exist (create folder /memorybank)
* Maintain a markdown using Mermaid Flowchart visualizing an orchestration overview (break out tasks)

## Completion Requirements
Use tool 'attempt_completion' with:
* Comprehensive plan summary in memory bank
* All identified subtasks in memory bank
* Dependencies mapped in memory bank
* Success criteria defined in memory bank
* Test strategy defined in memory bank

## Test stategy workflow
```mermaid
flowchart TD
    %% Initial State
    Start([Task Initiated]) --> A{Prerequisites Met?}
    A -->|No| B[Wait for Dependencies]
    B --> A

    %% Initial Stability Check
    A -->|Yes| C[Run Existing Tests]
    C --> D{Baseline Tests Pass?}
    D -->|No| E[Fix Existing Tests]
    E --> C

    %% Implementation First
    D -->|Yes| F[Implement Code Changes]
    F --> G[Run All Tests]
    G --> H{Tests Pass?}

    %% Analysis and Adjustment Phase
    H -->|No| I{Analyze Failure}
    I -->|Tests Need Update| J[Update Tests]
    I -->|Implementation Issue| K[Adjust Implementation]
    I -->|Both Required| L[Update Implementation and Tests]
    J --> G
    K --> G
    L --> G

    %% Add/Enhance Tests
    H -->|Yes| M[Add/Enhance Tests]
    M --> N[Run All Tests]
    N --> O{New Tests Pass?}
    O -->|No| I

    %% Refactor Phase
    O -->|Yes| P{Need Refactoring?}
    P -->|Yes| Q[Refactor Code]
    Q --> N

    %% Code Coverage Analysis
    P -->|No| R[Run Coverage Analysis]
    R --> S{Coverage Threshold Met?}
    S -->|No| T[Add Missing Tests]
    T --> N

    %% Code Quality Gates
    S -->|Yes| U{Code Quality Check}
    U -->|Failed| V[Address Code Smells]
    V --> N

    %% Completion
    U -->|Passed| W[Update Documentation]
    W --> X[Store Results in Memory]
    X --> Y[Mark Task Complete]
    Y --> End([Task Finalized])
```
